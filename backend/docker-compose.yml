services:
  db:
    container_name: streaming_service_db
    image: postgres:16.2-bullseye
    env_file:
      - .env
    environment:
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: "db"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d db"]
      interval: 1s
      timeout: 1s
      retries: 1
      start_period: 2s
    networks:
      - internal
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  app:
    container_name: streaming_service
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - internal
      - external

  nginx:
    container_name: nginx
    image: nginx:stable-perl
    working_dir: /app
    depends_on:
      - app
    networks:
      - external
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    links:
      - app
    ports:
      - 80:80

networks:
  internal:
  external:

volumes:
  pgdata: